{
  "openapi": "3.1.0",
  "info": {
    "title": "openQuester API",
    "version": "0.2.9"
  },
  "security": [
    {
      "JWTAuth": []
    }
  ],
  "paths": {
    "/v1/file": {
      "get": {
        "requestBody": {
          "required": true,
          "description": "filename which you want to get",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "somefilename.jpg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get link that allows you to see the file",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad filename",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Bad filename"
                }
              }
            }
          }
        }
      },
      "post": {
        "requestBody": {
          "required": true,
          "description": "filename which you want to put in bucket",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "somefilename.jpg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get link that allows you to put the file",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad filename",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Bad filename"
                }
              }
            }
          }
        }
      },
      "delete": {
        "requestBody": {
          "required": true,
          "description": "filename which you want to delete",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "somefilename.jpg"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Delete request send successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Delete request sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad filename",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Bad filename"
                }
              }
            }
          }
        }
      }
    },
    "/v1/package/upload": {
      "post": {
        "requestBody": {
          "description": "content.json file data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "object"
                  }
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content returned with updated \"file\" fields with links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "object",
                      "example": { "filename hash": "file upload link" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Content is empty!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Content is empty!"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/{id}": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user data successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateUser"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid or expired JWT token"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user data successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateUser"
                }
              }
            }
          },
          "400": {
            "description": "You don't have permissions for this operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "You are not able to do that"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "You don't have permissions for this operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "You are not able to do that"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/": {
      "get": {
        "responses": {
          "200": {
            "description": "Get user data successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateUser"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid or expired JWT token"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update user info.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user data successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateUser"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid or expired JWT token"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user.",
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "Invalid or expired JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid or expired JWT token"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/": {
      "get": {
        "summary": "Get all users info",
        "responses": {
          "200": {
            "description": "Get all users data successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivateUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "You have no access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "You are not able to do that"
                }
              }
            }
          },
          "404": {
            "description": "Users not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Users not found"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/register": {
      "post": {
        "summary": "User Registration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "[\"name\", \"password\"] is required"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "User Login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "[\"password\"] is required"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "summary": "Refresh tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": ["refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthData"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid or expired refresh token"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "JWTAuth": {
        "type": "http",
        "scheme": "Bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme."
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Unauthorized - Invalid or missing token",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Access denied"
                }
              }
            }
          }
        }
      },
      "TokenExpiredError": {
        "description": "Unauthorized - Token is expired or invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token invalid or expired"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "PrivateUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "email": {
            "type": "string",
            "example": "jogn.doe@gmail.com"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "2024-01-01"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "admin"
                }
              },
              "required": ["id", "name"]
            },
            "example": [
              { "id": 1, "name": "admin" },
              { "id": 2, "name": "user" }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T00:00:00Z"
          },
          "is_deleted": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "password": {
            "type": "string",
            "example": "mySuperCoolPassword123"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "2024-01-01"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": ["password"]
      },
      "RegisterUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "someuser@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "mySuperCoolPassword123"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "2024-01-01"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": ["name", "email", "password"]
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "username || useremail@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "mySuperCoolPassword123"
          }
        },
        "required": ["login", "password"]
      },
      "AuthData": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        },
        "required": ["access_token", "refresh_token"]
      }
    }
  }
}
